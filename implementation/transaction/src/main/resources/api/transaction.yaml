openapi: 3.0.0
info:
  title: RestAPI
  version: 1.0.0
  description: |
    Welcome to the RestAPI, a comprehensive interface catering to various banking and financial management needs. This API acts as a central hub, facilitating communication between different components for seamless execution of RESTful operations.


tags:
  - name: Transaction
  - name: One Time Transaction

paths:
  /transactions/onetime:
    get:
      summary: Get all one-time Transactions
      tags:
        - One Time Transaction
      responses:
        '200':
          description: Successfully retrieved a list of all existing one-time transactions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OneTimeTransactionDto'

    post:
      summary: Create a new one-time Transaction
      tags:
        - One Time Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneTimeTransactionDto'

      responses:
        '200':
          description: Successfully created one-time transactions.

  /transactions/onetime/{id}:
    get:
      summary: Get one-time Transaction by ID
      tags:
        - One Time Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved one-time transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneTimeTransactionDto'
        '404':
          description: One-Time transaction with given ID not found

    patch:
      summary: Update one-time Transaction by ID
      tags:
        - One Time Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneTimeTransactionDto'
      responses:
        '200':
          description: Successfully updated transaction
        '404':
          description: One-Time transaction with given ID not found

    delete:
      summary: Delete one-time Transaction by ID
      tags:
        - One Time Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted one-time transaction
        '404':
          description: One-Time transaction with given ID not found

components:
  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          example: {"message": "Resource not found"}

    BadRequest:
      description: Bad request
      content:
        application/json:
          example: {"message": "Bad request"}
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum: [INCOME, EXPENSE]
        labels:
          type: array
          items:
            type: string
        transfer:
          $ref: '#/components/schemas/TransferDto'

    RecurringTransaction:
      type: object
      allOf:
        - $ref: '#/components/schemas/Transaction'
        - properties:
            startDate:
              type: string
              format: Date
            fixedAmpunt:
              type: boolean
            periodicity:
              $ref: '#/components/schemas/Periodicity'
            transactionRecords:
              type: array
              items:
                $ref: '#/components/schemas/TransactionRecord'

    OneTimeTransactionDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/Transaction'
        - $ref: '#/components/schemas/Transferable'

    TransactionRecord:
      type: object
      allOf:
        - $ref: '#/components/schemas/Transferable'

    Transferable:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/MonetaryAmountDto'
        date:
          type: string
          format: Date

    TransferDto:
      type: object
      properties:
        sourceId:
          type: string
        targetBankAccountId:
          type: string
          format: uuid

    MonetaryAmountDto:
      type: object
      properties:
        amount:
          type: number
          format: double

    Periodicity:
      type: string
      enum: [MONTHLY, QUARTERLY, HALF_YEARLY, YEARLY]
