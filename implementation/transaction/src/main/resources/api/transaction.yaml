openapi: 3.0.0
info:
  title: Transaction API
  version: 1.0.0
  description: Manage the lifecycle of one-time and recurring transactions.

tags:
  - name: One-Time Transaction
  - name: Recurring Transaction

paths:
  /transactions/onetime:
    get:
      summary: Get all one-time transactions
      tags:
        - One-Time Transaction
      responses:
        '200':
          description: Successfully retrieved a list of all existing one-time transactions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OneTimeTransactionDto'

    post:
      summary: Create new one-time transaction
      tags:
        - One-Time Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneTimeTransactionDto'

      responses:
        '200':
          description: Successfully created a new one-time transactions.

  /transactions/onetime/{id}:
    get:
      summary: Get one-time transaction by ID
      tags:
        - One-Time Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved one-time transaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneTimeTransactionDto'
        '404':
          description: One-Time transaction with given ID not found.

    patch:
      summary: Update one-time transaction by ID
      tags:
        - One-Time Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneTimeTransactionDto'
      responses:
        '200':
          description: Successfully updated transaction.
        '404':
          description: One-Time transaction with given ID not found.

    delete:
      summary: Delete one-time Transaction by ID
      tags:
        - One-Time Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted one-time transaction.
        '404':
          description: One-Time transaction with given ID not found.

  /transactions/onetime/{id}/transfer:
    post:
      summary: Transfer one time transaction
      tags:
        - One-Time Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
      responses:
        '200':
          description: Successfully transferred one-time transaction.
        '404':
          description: One-Time transaction with given ID not found.

  /transactions/recurring:
    get:
      summary: Get all recurring transactions
      tags:
        - Recurring Transaction
      responses:
        '200':
          description: Successfully retrieved a list of all existing recurring transactions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecurringTransactionDto'

    post:
      summary: Create new recurring transaction
      tags:
        - Recurring Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecurringTransactionDto'

      responses:
        '200':
          description: Successfully created a new recurring transactions.

  /transactions/recurring/{id}:
    get:
      summary: Get recurring transaction by ID
      tags:
        - Recurring Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved recurring transaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringTransactionDto'
        '404':
          description: Recurring transaction with given ID not found.

    patch:
      summary: Update recurring transaction by ID
      tags:
        - Recurring Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecurringTransactionDto'
      responses:
        '200':
          description: Successfully updated transaction.
        '404':
          description: Recurring transaction with given ID not found.

    delete:
      summary: Delete recurring transaction by ID
      tags:
        - Recurring Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted recurring transaction.
        '404':
          description: Recurring transaction with given ID not found.

  /transactions/recurring/{transactionId}/records/{recordId}/transfer:
    post:
      summary: Transfer transaction record
      tags:
        - Recurring Transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          description: Transaction ID
          schema:
            type: string
        - name: recordId
          in: path
          required: true
          description: Record ID
          schema:
            type: string
      responses:
        '200':
          description: Successfully transferred transaction record.
        '404':
          description: Recurring transaction or transaction record with given ID not found.

components:
  schemas:
    TransactionDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/TypeDto'
        labels:
          type: array
          items:
            type: string
        transfer:
          $ref: '#/components/schemas/TransferDto'

    OneTimeTransactionDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/TransactionDto'
        - $ref: '#/components/schemas/TransferableDto'

    RecurringTransactionDto:
      type: object
      allOf:
        - properties:
            periodicity:
              $ref: '#/components/schemas/PeriodicityDto'
            startDate:
              type: string
              format: Date
            fixedAmount:
              $ref: '#/components/schemas/MonetaryAmountDto'
            transactionRecords:
              type: array
              items:
                $ref: '#/components/schemas/TransactionRecordDto'
        - $ref: '#/components/schemas/TransactionDto'

    TransactionRecordDto:
      type: object
      allOf:
        - properties:
            id:
              type: string
              format: uuid
        - $ref: '#/components/schemas/TransferableDto'

    TransferableDto:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/MonetaryAmountDto'
        date:
          type: string
          format: Date
        transferStatus:
          $ref: '#/components/schemas/TransferStatusDto'

    TransferDto:
      type: object
      properties:
        sourceBankAccountId:
          type: string
          format: uuid
        externalSourceId:
          type: string
        targetBankAccountId:
          type: string
          format: uuid
        externalTargetId:
          type: string

    MonetaryAmountDto:
      type: object
      properties:
        amount:
          type: number
          format: double

    PeriodicityDto:
      type: string
      enum: [MONTHLY, QUARTERLY, HALF_YEARLY, YEARLY]

    TypeDto:
      type: string
      enum: [ INCOME, EXPENSE ]

    TransferStatusDto:
      type: string
      enum: [ INITIAL, FAILED, SUCCESSFUL ]
