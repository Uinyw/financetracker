/*
 * Product API
 * Manage products, supplies and shopping carts.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets CategoryDto
 */
@JsonAdapter(CategoryDto.Adapter.class)
public enum CategoryDto {
  
  FOOD("FOOD"),
  
  DRINKS("DRINKS"),
  
  HOUSEHOLD("HOUSEHOLD"),
  
  ESSENTIALS("ESSENTIALS"),
  
  PET_SUPPLIES("PET_SUPPLIES");

  private String value;

  CategoryDto(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CategoryDto fromValue(String value) {
    for (CategoryDto b : CategoryDto.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CategoryDto> {
    @Override
    public void write(final JsonWriter jsonWriter, final CategoryDto enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CategoryDto read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CategoryDto.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    CategoryDto.fromValue(value);
  }
}

