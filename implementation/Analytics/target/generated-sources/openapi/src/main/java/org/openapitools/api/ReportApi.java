/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.ReportFilterDto;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-03-05T07:47:16.544140400+01:00[Europe/Berlin]")
@Validated
@Tag(name = "Analytics", description = "the Analytics API")
public interface ReportApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /report : Get a report plan of all the data
     *
     * @param reportFilterDto  (required)
     * @return Retrieve a budget plan of all the categories (status code 200)
     *         or Report cound not be created (status code 404)
     */
    @Operation(
        operationId = "reportGet",
        summary = "Get a report plan of all the data",
        tags = { "Analytics" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Retrieve a budget plan of all the categories"),
            @ApiResponse(responseCode = "404", description = "Report cound not be created")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/report",
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Void> reportGet(
        @Parameter(name = "ReportFilterDto", description = "", required = true) @Valid @RequestBody ReportFilterDto reportFilterDto
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
